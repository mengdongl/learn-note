1、new Promise((resolve,reject)=>{
    resolve(new Promise())
})
Promise构造函数参数的代码会立即执行,且构造函数中的resolve有解构Promise对象的效果。即如果resolve的是一个Promise对象,
生成的这个Promise实例会等待resolve中的对象状态变化，且两Promise对象状态保持一致。

2、 Promise.prototype.then()
then方法返回一个全新的Promise对象。then方法对返回值的处理如同Promise.resolve()方法对值的处理一样。

3、 Promise.resolve()
该方法用于将一个值转化为Promise对象。
(1)值为Promise:原封不动地返回这个Promise。
(2)值为thenable对象:将thenable对象转为Promise对象,并立即执行thenable对象的then方法。
(3)值为普通值:做为then方法resolve回调的参数。
(4)值为空。

4、 Promise.all()
传入一个数组,生成一个新Promise对象p。若数组值不是Promise对象，调用Promise.resolve()转换。
若数组对象都为fullfilled,p状态fullfilled。
若数组对象有一个rejected,p状态rejected。

5、 Promise.race()
传入一个数组,生成一个新Promise对象p。若数组值不是Promise对象，调用Promise.resolve()转换。
若数组对象有一个promise率先改变状态,则p也改变状态,且两者状态保持一致。

4、 Promise.allSettled()
传入一个数组,生成一个新Promise对象p。若数组值不是Promise对象，调用Promise.resolve()转换。
只有数组对象都执行完,不论fullfilled或rejected,p才会fullfilled。

5、 Promise.any()
传入一个数组,生成一个新Promise对象p。若数组值不是Promise对象，调用Promise.resolve()转换。
若数组对象有一个promise率先变成fullfilled，则p变成fullfilled。只有数组所有变为rejected,p才会rejected。